// Generated by CoffeeScript 1.9.1
Game.Screen = {};

Game.Screen.startScreen = {
  enter: function() {
    return console.log("we in dere");
  },
  exit: function() {
    return console.log("we out of dere");
  },
  render: function(display) {
    display.drawText(1, 1, "%c{yellow}Javascript Roguelike");
    return display.drawText(1, 2, "%c{gray}Press [Enter] to Start");
  },
  handleInput: function(eventType, event) {
    if (eventType === "keydown" && event.keyCode === ROT.VK_RETURN) {
      return Game.switchScreen(Game.Screen.playScreen);
    }
  }
};

Game.Screen.playScreen = {
  _map: null,
  enter: function() {
    var generator, i, j, map, num, ref, totalIterations, y;
    console.log("Entered Play Screen");
    map = [];
    for (num = i = 0; i <= 79; num = ++i) {
      map.push((function() {
        var j, results;
        results = [];
        for (y = j = 0; j <= 23; y = ++j) {
          results.push(Game.Tile.nullTile);
        }
        return results;
      })());
    }
    generator = new ROT.Map.Cellular(80, 24);
    generator.randomize(0.5);
    totalIterations = 3;
    for (num = j = 1, ref = totalIterations; 1 <= ref ? j <= ref : j >= ref; num = 1 <= ref ? ++j : --j) {
      generator.create();
    }
    generator.create(function(x, y, value) {
      if (value === 1) {
        return map[x][y] = Game.Tile.wallTile;
      } else {
        return map[x][y] = Game.Tile.floorTile;
      }
    });
    return this._map = new Game.Map(map);
  },
  exit: function() {
    return console.log("Exited Play Screen");
  },
  render: function(display) {
    var glyph, i, results, x, y;
    results = [];
    for (x = i = 0; i <= 79; x = ++i) {
      results.push((function() {
        var j, results1;
        results1 = [];
        for (y = j = 0; j <= 24; y = ++j) {
          glyph = this._map.getTile(x, y).getGlyph();
          results1.push(display.draw(x, y, glyph.getChar(), glyph.getForeground(), glyph.getBackground()));
        }
        return results1;
      }).call(this));
    }
    return results;
  },
  handleInput: function(eventType, event) {
    if (eventType === "keydown") {
      switch (event.keyCode) {
        case ROT.VK_RETURN:
          return Game.switchScreen(Game.Screen.winScreen);
        case ROT.VK_ESCAPE:
          return Game.switchScreen(Game.Screen.loseScreen);
        case ROT.VK_R:
          return Game.switchScreen(Game.Screen.playScreen);
      }
    }
  }
};

Game.Screen.winScreen = {
  enter: function() {
    return console.log("Entered winScreen");
  },
  exit: function() {
    return console.log("Exiting winScreen");
  },
  render: function(display) {
    display.drawText(1, 1, "%c{green}Yay, you won.");
    return display.drawText(1, 2, "%c{gray}Press [Enter] to try again");
  },
  handleInput: function(eventType, event) {
    if (eventType === "keydown" && event.keyCode === ROT.VK_RETURN) {
      return Game.switchScreen(Game.Screen.startScreen);
    }
  }
};

Game.Screen.loseScreen = {
  enter: function() {
    return console.log("Entered loseScreen");
  },
  exit: function() {
    return console.log("Exited loseScreen");
  },
  render: function(display) {
    display.drawText(1, 1, "%c{red}Buu, you lost.");
    return display.drawText(1, 2, "%c{gray}Press [Enter] to try again");
  },
  handleInput: function(eventType, event) {
    if (eventType === "keydown" && event.keyCode === ROT.VK_RETURN) {
      return Game.switchScreen(Game.Screen.startScreen);
    }
  }
};
